diff -Naur --exclude=.git --exclude=build --exclude=imgui-cpp pyimgui_orig/build.py pyimgui/build.py
--- pyimgui_orig/build.py	1970-01-01 06:00:00.000000000 +0600
+++ pyimgui/build.py	2018-08-08 19:57:26.000000000 +0600
@@ -0,0 +1,62 @@
+import os
+import shutil
+import subprocess
+
+shutil.rmtree("build", ignore_errors=True)
+os.makedirs("build/cython_files/", exist_ok=True)
+os.makedirs("build/c_files/", exist_ok=True)
+os.makedirs("build/python_files/", exist_ok=True)
+
+cythonModules = []
+for f in os.listdir("imgui"):
+    if f[-4:] in [".pxd", ".pyx"]:
+        shutil.copy2("imgui/" + f, "build/cython_files/")
+
+        moduleName = f[:-4]
+        if moduleName not in cythonModules:
+            cythonModules.append(moduleName)
+
+print("Modules detected:", cythonModules)
+origToWrap = {k: "__cwrap_pyimgui_" + k.replace(".", "_") for k in cythonModules}
+
+for f in os.listdir("build/cython_files"):
+    print("Patching", f)
+    filename = "build/cython_files/" + f
+    newfilename = "build/cython_files/" + origToWrap[f[:-4]] + f[-4:]
+    with open(filename, "r") as fd:
+        sourceCode = fd.read()
+    
+    for k in origToWrap:
+        sourceCode = sourceCode.replace("from " + k + " cimport", "from " + origToWrap[k] + " cimport")
+        sourceCode = sourceCode.replace("cimport " + k, "cimport " + origToWrap[k] + " as " + k)
+
+    with open(newfilename, "w") as fd:
+        fd.write(sourceCode)
+    
+    os.remove(filename)
+
+
+
+shutil.copytree("imgui", "build/python_files/imgui", ignore=shutil.ignore_patterns("*.pxd", "*.pyx"))
+
+
+wd = os.getcwd()
+os.chdir("build/cython_files/")
+
+subprocess.check_call([
+    "cythonize", 
+    "-3", 
+    "__cwrap_pyimgui_core.pyx", 
+    # "-Iimgui-cpp", 
+    # "-Iconfig-cpp", 
+    # "-Iimgui", 
+    # "-Ibuild/cython_files",
+    # "-I.",
+    # "-o",
+    # "build/c_files/"
+])
+
+os.chdir(wd)
+
+shutil.copy2("build/cython_files/__cwrap_pyimgui_core.cpp", "build/c_files/")
+shutil.copy2("build/cython_files/__cwrap_pyimgui_core.h", "build/c_files/")
diff -Naur --exclude=.git --exclude=build --exclude=imgui-cpp pyimgui_orig/imgui/__init__.py pyimgui/imgui/__init__.py
--- pyimgui_orig/imgui/__init__.py	2018-08-09 22:35:05.000000000 +0600
+++ pyimgui/imgui/__init__.py	2018-08-08 19:57:26.000000000 +0600
@@ -2,6 +2,11 @@
 VERSION = (1, 0, 0, 'a1')  # PEP 386
 __version__ = ".".join([str(x) for x in VERSION])
 
+import sys
+
+import __cwrap_pyimgui_core as coremod
+sys.modules['imgui.core'] = coremod
+
 from imgui.core import *  # noqa
 from imgui import core
 from imgui.extra import *  # noqa
diff -Naur --exclude=.git --exclude=build --exclude=imgui-cpp pyimgui_orig/imgui/integrations/__init__.py pyimgui/imgui/integrations/__init__.py
--- pyimgui_orig/imgui/integrations/__init__.py	2018-08-09 22:35:05.000000000 +0600
+++ pyimgui/imgui/integrations/__init__.py	2018-08-09 22:36:28.000000000 +0600
@@ -4,13 +4,13 @@
 from warnings import warn
 
 
-warn(
-    """
-    Integration layer in imgui.integrations is still in experimental mode.
-    Expect mayor changes in future versions. For safety it is recommended
-    to use code vendoring for specific integration impementation.
+# warn(
+#     """
+#     Integration layer in imgui.integrations is still in experimental mode.
+#     Expect mayor changes in future versions. For safety it is recommended
+#     to use code vendoring for specific integration impementation.
 
-    This subpackage should become stable in 1.0.0 version.
+#     This subpackage should become stable in 1.0.0 version.
 
-    """, FutureWarning
-)
+#     """, FutureWarning
+# )
diff -Naur --exclude=.git --exclude=build --exclude=imgui-cpp pyimgui_orig/imgui/integrations/nx.py pyimgui/imgui/integrations/nx.py
--- pyimgui_orig/imgui/integrations/nx.py	1970-01-01 06:00:00.000000000 +0600
+++ pyimgui/imgui/integrations/nx.py	2018-08-08 19:57:26.000000000 +0600
@@ -0,0 +1,19 @@
+import imguihelper
+import imgui
+
+class NXRenderer(object):
+    def __init__(self):
+        imgui.create_context()
+        self.io = imgui.get_io()
+        self.io.delta_time = 1.0 / 60.0
+        imguihelper.initialize()
+
+    def render(self):
+        imguihelper.render()
+
+    def handleinputs(self):
+        imguihelper.handleinputs()
+
+    def shutdown(self):
+        imguihelper.shutdown()
+        imgui.destroy_context()
\ No newline at end of file
